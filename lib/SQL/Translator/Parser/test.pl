my @classes = (
  "A_ArrayExpr",
  "A_Const",
  "A_Expr",
  "A_Indices",
  "A_Indirection",
  "A_Star",
  "AccessPriv",
  "Aggref",
  "Alias",
  "AlterDatabase",
  "AlterDatabaseSet",
  "AlterDefaultPrivileges",
  "AlterDomain",
  "AlterEnum",
  "AlterExtension",
  "AlterExtensionContents",
  "AlterFdw",
  "AlterForeignServer",
  "AlterFunction",
  "AlterObjectSchema",
  "AlterOpFamily",
  "AlterOwner",
  "AlterRole",
  "AlterRoleSet",
  "AlterSeq",
  "AlterTSConfiguration",
  "AlterTSDictionary",
  "AlterTable",
  "AlterTableCmd",
  "AlterTableSpaceOptions",
  "AlterUserMapping",
  "AlternativeSubPlan",
  "ArrayCoerceExpr",
  "ArrayExpr",
  "BoolExpr",
  "BooleanTest",
  "CaseExpr",
  "CaseTestExpr",
  "CaseWhen",
  "CheckPoint",
  "ClosePortal",
  "Cluster",
  "CoalesceExpr",
  "CoerceToDomain",
  "CoerceToDomainValue",
  "CoerceViaIO",
  "CollateClause",
  "CollateExpr",
  "ColumnDef",
  "ColumnRef",
  "Comment",
  "CommonTableExpr",
  "CompositeType",
  "Const",
  "Constraint",
  "ConstraintsSet",
  "ConvertRowtypeExpr",
  "Copy",
  "Create",
  "CreateCast",
  "CreateConversion",
  "CreateDomain",
  "CreateEnum",
  "CreateExtension",
  "CreateFdw",
  "CreateForeignServer",
  "CreateForeignTable",
  "CreateFunction",
  "CreateOpClass",
  "CreateOpClassItem",
  "CreateOpFamily",
  "CreatePLang",
  "CreateRange",
  "CreateRole",
  "CreateSchema",
  "CreateSeq",
  "CreateTableAs",
  "CreateTableSpace",
  "CreateTrig",
  "CreateUserMapping",
  "Createdb",
  "CurrentOfExpr",
  "Deallocate",
  "DeclareCursor",
  "DefElem",
  "Define",
  "Delete",
  "Discard",
  "DistinctExpr",
  "Do",
  "Drop",
  "DropOwned",
  "DropRole",
  "DropTableSpace",
  "DropUserMapping",
  "Dropdb",
  "Execute",
  "Explain",
  "Expr",
  "Fetch",
  "FieldSelect",
  "FieldStore",
  "FromExpr",
  "FuncCall",
  "FuncExpr",
  "FuncWithArgs",
  "FunctionParameter",
  "Grant",
  "GrantRole",
  "Index",
  "IndexElem",
  "InlineCodeBlock",
  "Insert",
  "IntoClause",
  "JoinExpr",
  "Listen",
  "Load",
  "Lock",
  "LockingClause",
  "MinMaxExpr",
  "NamedArgExpr",
  "Notify",
  "NullIfExpr",
  "NullTest",
  "OpExpr",
  "Param",
  "ParamRef",
  "Prepare",
  "PrivGrantee",
  "RangeFunction",
  "RangeSubselect",
  "RangeTblRef",
  "RangeVar",
  "ReassignOwned",
  "Reindex",
  "RelabelType",
  "Rename",
  "ResTarget",
  "RowCompareExpr",
  "RowExpr",
  "Rule",
  "ScalarArrayOpExpr",
  "SecLabel",
  "Select",
  "SetOperation",
  "SetToDefault",
  "SortBy",
  "SubLink",
  "SubPlan",
  "TableLikeClause",
  "TargetEntry",
  "Transaction",
  "Truncate",
  "TypeCast",
  "TypeName",
  "Unlisten",
  "Update",
  "Vacuum",
  "Var",
  "VariableSet",
  "VariableShow",
  "View",
  "WindowDef",
  "WindowFunc",
  "WithClause",
  "XmlExpr",
  "XmlSerialize",
  "_classes",
);

use File::Slurp;
use List::AllUtils 'first';

my $lines = [ File::Slurp::read_file('Neo.eyp') ];
foreach my $cls (@classes) {
   my $re = '::'.$cls.'->';
   next if (first { /$cls/ } @$lines);
   print "$cls\n";
}
